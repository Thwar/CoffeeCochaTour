@page
@using Models
@model IndexModel


@{
    ViewData["Title"] = "Inicio";
    //https://docs.microsoft.com/en-us/aspnet/core/tutorials/razor-pages/model
}

<style>
    .coffeeList li {
        padding-bottom: 20px;
        padding-top: 20px;
        font-size: 110%;
        list-style: none;
        text-align: center;
        border-bottom: solid black 1px;
    }
</style>

<script>

    var map, popup, Popup;

    $(document).ready(function () {

        //Create Google Maps PopUp
        definePopupClass();

        //-17.376499,-66.1583852
         map = new google.maps.Map(document.getElementById('map'), {
            center: {lat: -17.376499, lng: -66.1583852},
            zoom: 14,
            gestureHandling: 'greedy'

        });

        // Try HTML5 geolocation.
        //if (navigator.geolocation) {
        //    navigator.geolocation.getCurrentPosition(function(position) {
        //        var pos = {
        //            lat: position.coords.latitude,
        //            lng: position.coords.longitude
        //        };

        //        infoWindow.setPosition(pos);
        //        infoWindow.setContent('Location found.');
        //        console.log('Location found.');
        //        infoWindow.open(map);
        //        map.setCenter(pos);
        //    }, function() {
        //        handleLocationError(true, infoWindow, map.getCenter());
        //    });
        //} else {
        //    // Browser doesn't support Geolocation
        //    handleLocationError(false, infoWindow, map.getCenter());
        //}


        var infoWindow = new google.maps.InfoWindow();
        var service = new google.maps.places.PlacesService(map);

        //LOOP COFFFFEEEESSSS for Google Map

        for (var i = 0; i < @Model.CoffeeShop.Count; i++) {
            loopCoffees(i, service,infoWindow );
        }
    });

    function loopCoffees(i, service, infoWindow) {
        setTimeout(function() {

            // Randomize
            var shops = @Html.Raw(Json.Serialize(@Model.CoffeeShop.OrderBy(a => Guid.NewGuid()).ToList()));

            var id = shops[i].googlePlaceId;

            service.getDetails({
                placeId:shops[i].googlePlaceId
            }, function(place, status) {

                    if (place == null) {
                        console.log(id + ' ' + status);
                    }
                    else {

                    console.log(place.name + ' ' + status + ' ' + id);
              //  if (status === google.maps.places.PlacesServiceStatus.OK) {

                    //Create Marker
                    //var marker = new google.maps.Marker({
                    //    map: map,
                    //    position: place.geometry.location
                    //});
                    //END

                    //cREATE POPUP
                    var lat = place.geometry.location.lat();
                    var lng = place.geometry.location.lng();

                    var mapPopup = document.createElement("P");       // Create a <p> node
                    var t = document.createTextNode(place.name);      // Create a text node
                    mapPopup.appendChild(t);

                    popup = new Popup(new google.maps.LatLng(lat, lng), mapPopup);
                    popup.setMap(map);

                    google.maps.event.addDomListener(mapPopup, 'click', function() {
                       // window.alert(place.name + 'Map was clicked!');

                        var marker = new google.maps.Marker({
                            position: {lat:  place.geometry.location.lat(), lng: place.geometry.location.lng()},
                            map: map
                        });

                        //Get DB Place
                       var shop =  shops.find(isPlaceId);
                        function isPlaceId(shop) {
                            return shop.googlePlaceId === place.place_id;
                        }

                        //Map popup HTML
                        infoWindow.setContent(" <div>"+
                            "<div class='col-xs-6'> <img class='mapImg' src='" + shop.image1Url + "' /></div>" +
                            "<div style='text-align: center' class='col-xs-6'><strong>" + place.name + '</strong><br><br>'+
                            '  <a href="/CoffeeShops/Details/'+ shop.name +'">Abrir Pagina</a>' +
                            ' </div>' +
                         //   'Place ID: ' + place.place_id + '<br>' +


                          //  place.formatted_address +
                            '</div>');

                        infoWindow.setZIndex(5000);
                        infoWindow.open(map, marker);



                    });
                    }
                    //google.maps.event.addListener(popup, 'click', function() {
                    //    infoWindow.setContent('<div><strong>' + place.name + '</strong><br>' +
                    //                          'Place ID: ' + place.place_id + '<br>' +
                    //                             place.formatted_address + '</div>');
                    //    infoWindow.open(map, this);
                    //});
             //   }
            });

         }, 235 * i ); // Delay on retrieving google details because of query limitation
    }

</script>


<style>
    #map {
        display: block;
        width: 100%;
        height: 350px;
    }

    #map {
        background: #58B;
    }

    .gm-style-iw {
        width: 300px !important;
    }
</style>



<div id="homeContainer" class="row col-sm-10 col-xs-12" style="text-align: center">

    <div id="map"></div>

    @foreach (var item in Model.CoffeeShop)
    {
        <div class="col-sm-4 col-xs-12">

            <figure class="snip1440 ">

                @if (item.Image1Url != null)
                {
                    <img src="@Html.DisplayFor(modelItem => item.Image1Url)" alt="sample66" />
                }
                else
                {
                    <img src="images/missing.png" alt="sample66" />
                }

                <figcaption>
                    <h3>@Html.DisplayFor(modelItem => item.Name)</h3><span> </span>
                </figcaption>
                <a href="/CoffeeShops/Details/@item.Name"></a>
            </figure>

        </div>

    }

</div>


@*  Right column *@
<div id="homeRightContainer"  class="col-sm-2">
    <p >
        <br />
        <h4 style="text-align: center; text-decoration: underline">Recursos</h4>
        <ul class="coffeeList">
            <li><a target="_blank" href="https://www.facebook.com/groups/noalatalacochabamba/">No a la tala de árboles en Cochabamba Grupo Facebook</a></li>
            <li><a target="_blank" href="https://www.reddit.com/r/BOLIVIA/">Reddit Bolivia</a></li>
            </ul>
        <br/>
        <h4 style="text-align: center; text-decoration: underline">Lista de Cafes</h4>
        <br/>
        <ul class="coffeeList">
            @foreach (var item in Model.CoffeeShop.OrderBy(x => x.Name))
            {
                <li><a href="/CoffeeShops/Details/@item.Name" style="color: #2C2722">@Html.DisplayFor(modelItem => item.Name)</a></li>
            }
        </ul>

    </p>
</div>

